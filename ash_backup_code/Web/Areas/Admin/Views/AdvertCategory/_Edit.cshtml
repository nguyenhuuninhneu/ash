
<link rel="stylesheet" href="/Content/Admin/assets/colorpicker/css/colorpicker.css" type="text/css" />
<script type="text/javascript" src="/Content/Admin/assets/colorpicker/js/colorpicker.js"></script>
@using Web.Model
@model advert_category
@{
    var lstLanguages = (List<tbl_Languages>)TempData["languages"];
    var lstModule = (List<module>)TempData["lstModule"];
    var lstAdvertCategoryModule = (List<advert_category_module>)TempData["lstAdvertCategoryModule"];

}
@using (Ajax.BeginForm("Edit", "AdvertCategory", null,
                                                                                                                                                                                                                            new AjaxOptions
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                HttpMethod = "POST",
                                                                                                                                                                                                                                OnSuccess = "AdvertCategory.onEditSuccess"
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            new { @id = "basicForm", @class = "form-horizontal" }))
{
    @Html.HiddenFor(g => g.ID)
    //@Html.HiddenFor(g => g.UserType)
    @Html.HiddenFor(g => g.CreatedDate)
    @Html.HiddenFor(g => g.CreatedBy)
    <input hidden id="ListCheck" name="ListCheck" />
    <div class="form-group">
        <label class="col-md-2 control-label">Ngôn ngữ</label>
        <div class="col-md-9">
            <select id="LangCode" name="LangCode" class="form-control select2">
                @*<option value="">-- Chọn ngôn ngữ --</option>*@
                @{
                    foreach (var item in lstLanguages)
                    {
                        <option value="@item.Code" @(Model.LangCode == item.Code ? "selected" : "")>@item.Name</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Danh mục cha</label>
        @{
            var lstAdvertCategory = (List<advert_category>)TempData["AdvertCategory"];
            lstAdvertCategory.ForEach(g => g.Name = string.Concat(Enumerable.Repeat("--", g.Level)) + g.Name);
        }
        <div class="col-md-9">
            @Html.DropDownListFor(x => x.ParentID, new SelectList(lstAdvertCategory, "ID", "Name"), "- Chọn danh mục cha -", new { @class = "form-control select2" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Tiêu đề <span class="asterisk" style="color:red;">(*)</span></label>
        <div class="col-md-9">
            @Html.TextBoxFor(g => g.Name, new { @class = "form-control ", placeholder = "Tiêu đề" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">Ghi chú </label>
        <div class="col-sm-9">
            @Html.TextBoxFor(g => g.GhiChu, new { @class = "form-control", placeholder = "Ghi chú" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">Thứ tự <span class="asterisk" style="color:red;">(*)</span></label>
        <div class="col-sm-9">
            @Html.TextBoxFor(g => g.Ordering, new { @class = "form-control", placeholder = "Thứ tự" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-10 pull-right">
            <div class="checkbox checkbox-primary">
                <input id="Status" name="Status" type="checkbox" value="true" @(Model.Status ? "checked" : "")>
                <label for="Status">
                    Kích hoạt
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">Module quảng cáo:</label>
        <div class="col-sm-10">
            @{
                var ListCheck = (String[])TempData["ListCheck"];

            }
            @foreach (var item in lstModule)
            {

                <div class="col-md-3 checkbox checkbox-primary" id="checkboxes" style="float:left;padding-right:10px;">
                    <input id="@item.ID" name="check_list" type="checkbox" class="check_list" @((ListCheck != null && ListCheck.Contains(item.ID.ToString())) ? "checked" : "")>
                    <label for="@item.ID">
                        @item.Name
                    </label>
                </div>


                @*var a = 0;
                    if (!ListCheck.Contains(""))
                    {
                        for (int i = 0; i < ListCheck.Count(); i++)
                        {
                            if (item.ID == Convert.ToInt32(ListCheck[i]))
                            {
                                a = item.ID;
                                <div class="col-md-3 checkbox checkbox-primary" id="checkboxes" style="float:left;padding-right:10px;">
                                    <input id="@item.ID" name="check_list" type="checkbox" class="check_list" checked>
                                    <label for="@item.ID">
                                        @item.Name
                                    </label>
                                </div>
                                break;
                            }

                        }
                    }
                    if (item.ID != a)
                    {
                        <div class="col-md-3 checkbox checkbox-primary" id="checkboxes" style="float:left;padding-right:10px;">
                            <input id="@item.ID" name="check_list" type="checkbox" class="check_list">
                            <label for="@item.ID">
                                @item.Name
                            </label>
                        </div>
                    }*@

            }

        </div>
    </div>
    <div class="col-md-10 text-center">
        <button type="submit" class="btn btn-primary waves-effect waves-light">Cập nhật</button>
        <button type="button" onclick="modal.hide()" class="btn btn-default waves-effect waves-light"><i class="glyphicon glyphicon-ban-circle"></i> Đóng</button>
    </div>

                }
<script src="~/AppJs/advertcategory.js"></script>
<script>

    $(".select2").select2({ "width": "100%" });
    $(document).ready(function () {
        $.validator.addMethod("CheckTrung", function (id, value, element) {
            debugger;
            var name = $("#Name").val();
            var id = $("#ID").val();
            var isSuccess = true;//không trùng
            $.ajax({
                async: false,
                url: "/AdvertCategory/CheckTrung",
                type: "get",
                dataType: "json",
                data: {
                    id: id,
                    name: name

                },
                success: function (res) {
                    if (res.trungTen == true) {
                        isSuccess = false;
                    }
                }
            });
            return isSuccess;

        }, "Tên đã tồn tại");
        $("#basicForm").validate({
            rules:
            {
                Name:
                {
                    required: true,
                    CheckTrung: true
                },
                Ordering: {
                    required: true,
                    digits: true
                }
            },
            messages:
            {
                Name:
                {
                    required: "Chưa nhập tên tài liệu",
                    CheckTrung: "Tên đã tồn tại"
                },
                Ordering: {
                    required: "Nhập số thứ tự",
                    digits: "Nhâp kiểu số"
                }

            }
        });
        $("#basicForm").submit(function () {
            debugger;
            var selected = [];
            $('#checkboxes input:checked').each(function () {
                selected.push($(this).attr('id'));
            });
            $("#ListCheck").val(selected);

        });
        account.initcheckall();
        $('#pagemanager').slimScroll({
            height: '300px',
        });
        $('.datepicker-mask1').datetimepicker({
            locale: 'vi',
            format: 'DD/MM/YYYY'
        });
        $(".select").select2();
    });

</script>


