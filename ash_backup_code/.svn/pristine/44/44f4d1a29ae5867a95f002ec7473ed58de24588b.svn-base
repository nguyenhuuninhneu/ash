//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PortalNewsEntities : DbContext
    {
        public PortalNewsEntities()
            : base("name=PortalNewsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GroupCusUser> GroupCusUsers { get; set; }
        public virtual DbSet<qProcedure> qProcedures { get; set; }
        public virtual DbSet<qProcess> qProcesses { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Table_TEST> Table_TEST { get; set; }
        public virtual DbSet<tbl_AccessOnline> tbl_AccessOnline { get; set; }
        public virtual DbSet<tbl_AccessView> tbl_AccessView { get; set; }
        public virtual DbSet<tbl_AdminMenu> tbl_AdminMenu { get; set; }
        public virtual DbSet<tbl_Advert> tbl_Advert { get; set; }
        public virtual DbSet<tbl_ApproveNews> tbl_ApproveNews { get; set; }
        public virtual DbSet<tbl_BoxNewsConfig> tbl_BoxNewsConfig { get; set; }
        public virtual DbSet<tbl_Calendar> tbl_Calendar { get; set; }
        public virtual DbSet<tbl_Category> tbl_Category { get; set; }
        public virtual DbSet<tbl_Chat> tbl_Chat { get; set; }
        public virtual DbSet<tbl_ChucVu> tbl_ChucVu { get; set; }
        public virtual DbSet<tbl_Config> tbl_Config { get; set; }
        public virtual DbSet<tbl_configLuuY> tbl_configLuuY { get; set; }
        public virtual DbSet<tbl_ConfigText> tbl_ConfigText { get; set; }
        public virtual DbSet<tbl_Contact> tbl_Contact { get; set; }
        public virtual DbSet<tbl_ContactInfo> tbl_ContactInfo { get; set; }
        public virtual DbSet<tbl_CoQuanBanHanh> tbl_CoQuanBanHanh { get; set; }
        public virtual DbSet<tbl_CountAccess> tbl_CountAccess { get; set; }
        public virtual DbSet<tbl_DanhMucTaiLieu> tbl_DanhMucTaiLieu { get; set; }
        public virtual DbSet<tbl_DMChung> tbl_DMChung { get; set; }
        public virtual DbSet<tbl_DMNhom> tbl_DMNhom { get; set; }
        public virtual DbSet<tbl_DonVi> tbl_DonVi { get; set; }
        public virtual DbSet<tbl_DonViTTHC> tbl_DonViTTHC { get; set; }
        public virtual DbSet<tbl_FeedBack> tbl_FeedBack { get; set; }
        public virtual DbSet<tbl_fieldfiles> tbl_fieldfiles { get; set; }
        public virtual DbSet<tbl_Footer> tbl_Footer { get; set; }
        public virtual DbSet<tbl_GroupUser> tbl_GroupUser { get; set; }
        public virtual DbSet<tbl_HistoryNews> tbl_HistoryNews { get; set; }
        public virtual DbSet<tbl_HomeMenu> tbl_HomeMenu { get; set; }
        public virtual DbSet<tbl_HomeMenu_OLD> tbl_HomeMenu_OLD { get; set; }
        public virtual DbSet<tbl_Images> tbl_Images { get; set; }
        public virtual DbSet<tbl_ImagesCategory> tbl_ImagesCategory { get; set; }
        public virtual DbSet<tbl_Languages> tbl_Languages { get; set; }
        public virtual DbSet<tbl_LichCongTac> tbl_LichCongTac { get; set; }
        public virtual DbSet<tbl_Limit> tbl_Limit { get; set; }
        public virtual DbSet<tbl_LinhVucTTHC> tbl_LinhVucTTHC { get; set; }
        public virtual DbSet<tbl_LinhVucVanBan> tbl_LinhVucVanBan { get; set; }
        public virtual DbSet<tbl_LinkWebsite> tbl_LinkWebsite { get; set; }
        public virtual DbSet<tbl_LoaiVanBan> tbl_LoaiVanBan { get; set; }
        public virtual DbSet<tbl_Logs> tbl_Logs { get; set; }
        public virtual DbSet<tbl_Magazine> tbl_Magazine { get; set; }
        public virtual DbSet<tbl_ModuleCate> tbl_ModuleCate { get; set; }
        public virtual DbSet<tbl_News> tbl_News { get; set; }
        public virtual DbSet<tbl_NewsComment> tbl_NewsComment { get; set; }
        public virtual DbSet<tbl_NewsPaper> tbl_NewsPaper { get; set; }
        public virtual DbSet<tbl_NewsPaperComment> tbl_NewsPaperComment { get; set; }
        public virtual DbSet<tbl_Online> tbl_Online { get; set; }
        public virtual DbSet<tbl_PageElement> tbl_PageElement { get; set; }
        public virtual DbSet<tbl_Position> tbl_Position { get; set; }
        public virtual DbSet<tbl_Product> tbl_Product { get; set; }
        public virtual DbSet<tbl_ProductCategory> tbl_ProductCategory { get; set; }
        public virtual DbSet<tbl_ProductOverView> tbl_ProductOverView { get; set; }
        public virtual DbSet<tbl_QALinhVuc> tbl_QALinhVuc { get; set; }
        public virtual DbSet<tbl_QuestionAndAnswer> tbl_QuestionAndAnswer { get; set; }
        public virtual DbSet<tbl_SlideImages> tbl_SlideImages { get; set; }
        public virtual DbSet<tbl_SubeMagazine> tbl_SubeMagazine { get; set; }
        public virtual DbSet<tbl_TaiLieu> tbl_TaiLieu { get; set; }
        public virtual DbSet<tbl_ThamDoYKien> tbl_ThamDoYKien { get; set; }
        public virtual DbSet<tbl_ThamDoYKien_Ip> tbl_ThamDoYKien_Ip { get; set; }
        public virtual DbSet<tbl_ToGiac> tbl_ToGiac { get; set; }
        public virtual DbSet<tbl_Topic> tbl_Topic { get; set; }
        public virtual DbSet<tbl_TopicComment> tbl_TopicComment { get; set; }
        public virtual DbSet<tbl_truyna> tbl_truyna { get; set; }
        public virtual DbSet<tbl_TTHC> tbl_TTHC { get; set; }
        public virtual DbSet<tbl_TTHCComment> tbl_TTHCComment { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<tbl_UserAdmin> tbl_UserAdmin { get; set; }
        public virtual DbSet<tbl_VanBan> tbl_VanBan { get; set; }
        public virtual DbSet<tbl_Video> tbl_Video { get; set; }
        public virtual DbSet<tbl_VideoCategory> tbl_VideoCategory { get; set; }
        public virtual DbSet<view_Category_Languages> view_Category_Languages { get; set; }
        public virtual DbSet<View_DataHome> View_DataHome { get; set; }
        public virtual DbSet<View_Gallery_Category> View_Gallery_Category { get; set; }
        public virtual DbSet<view_Images_ImageCategory> view_Images_ImageCategory { get; set; }
        public virtual DbSet<view_News> view_News { get; set; }
        public virtual DbSet<view_News_HomeCategory> view_News_HomeCategory { get; set; }
        public virtual DbSet<view_News_hotAndUnderhot> view_News_hotAndUnderhot { get; set; }
        public virtual DbSet<view_News_Limit> view_News_Limit { get; set; }
        public virtual DbSet<view_NEWS_LISTDATA> view_NEWS_LISTDATA { get; set; }
        public virtual DbSet<view_NEWS_LISTDETAIL> view_NEWS_LISTDETAIL { get; set; }
        public virtual DbSet<view_News_MultiCate> view_News_MultiCate { get; set; }
        public virtual DbSet<view_News_noPublic> view_News_noPublic { get; set; }
        public virtual DbSet<view_News_Public> view_News_Public { get; set; }
        public virtual DbSet<view_news_search> view_news_search { get; set; }
        public virtual DbSet<view_News_Sukien> view_News_Sukien { get; set; }
        public virtual DbSet<tbl_eMagazine> tbl_eMagazine { get; set; }
    
        [DbFunction("PortalNewsEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[PortalNewsEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("PortalNewsEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[PortalNewsEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int NewsGetAll(Nullable<int> page, Nullable<int> pagesize, string field, string table, string condition, string orderby, ObjectParameter pTotalRecord)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var fieldParameter = field != null ?
                new ObjectParameter("field", field) :
                new ObjectParameter("field", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            var orderbyParameter = orderby != null ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewsGetAll", pageParameter, pagesizeParameter, fieldParameter, tableParameter, conditionParameter, orderbyParameter, pTotalRecord);
        }
    
        public virtual ObjectResult<NewsOther_Result> NewsOther(Nullable<System.DateTime> pObjNewsCreatedDate, Nullable<int> pObjNewsId, string pCategoryIdStr, Nullable<int> pagesize)
        {
            var pObjNewsCreatedDateParameter = pObjNewsCreatedDate.HasValue ?
                new ObjectParameter("pObjNewsCreatedDate", pObjNewsCreatedDate) :
                new ObjectParameter("pObjNewsCreatedDate", typeof(System.DateTime));
    
            var pObjNewsIdParameter = pObjNewsId.HasValue ?
                new ObjectParameter("pObjNewsId", pObjNewsId) :
                new ObjectParameter("pObjNewsId", typeof(int));
    
            var pCategoryIdStrParameter = pCategoryIdStr != null ?
                new ObjectParameter("pCategoryIdStr", pCategoryIdStr) :
                new ObjectParameter("pCategoryIdStr", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewsOther_Result>("NewsOther", pObjNewsCreatedDateParameter, pObjNewsIdParameter, pCategoryIdStrParameter, pagesizeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spTB_News_PhanTrang_Result> spTB_News_PhanTrang(Nullable<int> currPage, Nullable<int> recodperpage, Nullable<int> pagesize, Nullable<int> catId, ObjectParameter totalRecord)
        {
            var currPageParameter = currPage.HasValue ?
                new ObjectParameter("currPage", currPage) :
                new ObjectParameter("currPage", typeof(int));
    
            var recodperpageParameter = recodperpage.HasValue ?
                new ObjectParameter("recodperpage", recodperpage) :
                new ObjectParameter("recodperpage", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(int));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTB_News_PhanTrang_Result>("spTB_News_PhanTrang", currPageParameter, recodperpageParameter, pagesizeParameter, catIdParameter, totalRecord);
        }
    }
}
