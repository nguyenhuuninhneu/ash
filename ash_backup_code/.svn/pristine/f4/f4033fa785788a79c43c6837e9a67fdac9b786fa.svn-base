
<link rel="stylesheet" href="/Content/Admin/assets/colorpicker/css/colorpicker.css" type="text/css" />
<script type="text/javascript" src="/Content/Admin/assets/colorpicker/js/colorpicker.js"></script>
@using Web.Model
@model document_category
@{
    var lstLanguages = (List<tbl_Languages>)TempData["languages"];

}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@using (Ajax.BeginForm("Edit", "DocumentCategory", null,
                                                                                                    new AjaxOptions
                                                                                                    {
                                                                                                        HttpMethod = "POST",
                                                                                                        OnSuccess = "DocumentCategory.onEditSuccess"
                                                                                                    },
                                                                                                    new { @id = "basicForm", @class = "form-horizontal" }))
{
    @Html.HiddenFor(g => g.ID)
    //@Html.HiddenFor(g => g.UserType)
    @Html.HiddenFor(g => g.CreatedDate)
    @Html.HiddenFor(g => g.CreatedBy)
    <div class="form-group">
        <label class="col-md-2 control-label">Ngôn ngữ</label>
        <div class="col-md-9">
            <select id="LangCode" name="LangCode" class="form-control select2">
                @*<option value="">-- Chọn ngôn ngữ --</option>*@
                @{
                    foreach (var item in lstLanguages)
                    {
                        <option value="@item.Code" @(Model.LangCode == item.Code ? "selected" : "")>@item.Name</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Danh mục cha</label>
        @{
            var lstDocumentCategory = (List<document_category>)TempData["DocumentCategory"];
            lstDocumentCategory.ForEach(g => g.Name = string.Concat(Enumerable.Repeat("--", g.Level)) + g.Name);
        }
        <div class="col-md-9">
            @Html.DropDownListFor(x => x.ParentID, new SelectList(lstDocumentCategory, "ID", "Name"), "- Chọn danh mục cha -", new { @class = "form-control select2" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Tiêu đề <span class="asterisk">(*)</span></label>
        <div class="col-md-9">
            @Html.TextBoxFor(g => g.Name, new { @class = "form-control ", placeholder = "Tiêu đề" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label">Ảnh đại diện</label>
        <div class="col-md-10">
            @Html.HiddenFor(g => g.Photo)
            <a id="Browser" class="btn btn-primary btn-custom waves-effect waves-light m-b-5">
                <span class="glyphicon glyphicon-paperclip"></span> Tải ảnh lên
            </a>
            <div class="mt10" id="previewthumbnail">
                @if (!string.IsNullOrEmpty(Model.Photo))
                {
                    <a id="aTag" href="#" onclick="RemoveImage()" title="Xóa ảnh"><i class="fa fa-close" style="font-size: 25px;"></i></a>
                    <img id="image" src="@Model.Photo" width="150" />
                }
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Title</label>
        <div class="col-md-9">
            @Html.TextBoxFor(g => g.Title, new { @class = "form-control", placeholder = "Title" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Key word</label>
        <div class="col-md-9">
            @Html.TextBoxFor(g => g.Keyword, new { @class = "form-control", placeholder = "Keyword" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Mô tả</label>
        <div class="col-md-9">
            @Html.TextBoxFor(g => g.Description, new { @class = "form-control", placeholder = "Description" })
            @*@Html.TextAreaFor(g => g.Description, new { @id = "FullDescription", @class = "form-control", @rows = "200" })
            @Html.ValidationMessageFor(g => g.Description, "", new { @class = "text-danger" })
            <script>
                CKEDITOR.replace('FullDescription');
            </script>*@
        </div>
    </div>
   
    <div class="form-group">
        <label class="col-sm-2 control-label">Thứ tự <span class="asterisk">(*)</span></label>
        <div class="col-sm-9">
            @Html.TextBoxFor(g => g.Ordering, new { @class = "form-control", placeholder = "Thứ tự" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-10 pull-right">
            <div class="checkbox checkbox-primary">
                <input id="Status" name="Status" type="checkbox" value="true" @(Model.Status ? "checked" : "")>
                <label for="Status">
                    Kích hoạt
                </label>
            </div>
        </div>
    </div>

    <div class="col-md-10 text-center">
        <button type="submit" class="btn btn-primary waves-effect waves-light">Cập nhật</button>
        <button type="button" onclick="modal.hide()" class="btn btn-default waves-effect waves-light"><i class="glyphicon glyphicon-ban-circle"></i> Đóng</button>
    </div>

    <div class="form-group">
        <div class="row">

        </div>
    </div>
        <div class="col-md-12">
            <table class="table table-striped" border="1 solid #F9F9F9">
                <tr>
                    <th style="vertical-align: middle;">Chọn nhóm hỗ trợ đề mục</th>
                    <td style="vertical-align: middle;">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Danh mục cha : </label>
                            @{
                                var lstDanhMucCha1 = (List<DanhMucCha>)TempData["DanhMucCha"];

                            }
                            <div class="col-md-8">
                                @*@Html.DropDownListFor(x => x.ID, new SelectList(lstDanhMucCha1, "ID", "Name"), "- Chọn danh mục gốc -", new { @class = "form-control select2 danhmuccha1", @onchange = "GetChild1()" })*@
                                <select id="support_1" name="support_1" class="form-control select2 danhmuccha1" onchange="GetChild1(@Model.ID)">
                                    <option value="">-Chọn danh mục gốc-</option>
                                    @{

                                        foreach (var item in lstDanhMucCha1)
                                        {
                                            <option value="@item.ID" @(Model.support_1 == item.ID.ToString() ? "selected" : "")>@item.Name</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label">Danh mục con : </label>

                            <div class="col-md-8">
                                <div id="SelectDanhMucCon1"></div>

                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th style="vertical-align: middle;">Chọn nhóm Quảng cáo</th>
                    <td style="vertical-align: middle;">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Danh mục cha : </label>
                            @{
                                var lstDanhMucCha2 = (List<DanhMucCha>)TempData["DanhMucCha"];

                            }
                            <div class="col-md-8">
                                @*@Html.DropDownListFor(x => x.ID, new SelectList(lstDanhMucCha2, "ID", "Name"), "- Chọn danh mục cha -", new { @class = "form-control select2 danhmuccha2", @onchange = "GetChild2()" })*@
                                <select id="advert_1" name="advert_1" class="form-control select2 danhmuccha2" onchange="GetChild2(@Model.ID)">
                                    <option value="">-Chọn danh mục gốc-</option>
                                    @{

                                        foreach (var item in lstDanhMucCha2)
                                        {
                                            <option value="@item.ID" @(Model.advert_1 == item.ID.ToString() ? "selected" : "")>@item.Name</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" id="labelDanhMucCon2">Danh mục con : </label>

                            <div class="col-md-8">
                                <div id="SelectDanhMucCon2"></div>

                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th style="vertical-align: middle;" rowspan="2">
                        @Html.RadioButtonFor(g=>g.view_more_detail, "update") Mới cập nhật<br>
                        @Html.RadioButtonFor(g => g.view_more_detail, "same_category") Cùng mục<br>
                        @Html.RadioButtonFor(g => g.view_more_detail, "same_date") Cùng ngày
                    </th>
                    <td style="vertical-align: middle;text-align:center;font:bold;" class="control-label">Tăng cường hiển thị</td>
                </tr>
                <tr>


                    <td style="vertical-align: middle;">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Danh mục cha : </label>
                            @{
                                var lstDanhMucCha3 = (List<DanhMucCha>)TempData["DanhMucCha"];

                            }
                            <div class="col-md-8">
                                @*@Html.DropDownListFor(x => x.ID, new SelectList(lstDanhMucCha3, "ID", "Name"), "- Chọn danh mục cha -", new { @class = "form-control select2 danhmuccha3", @onchange = "GetChild3()" })*@
                                <select id="display_1" name="display_1" class="form-control select2 danhmuccha3" onchange="GetChild3(@Model.ID)">
                                    <option value="">-Chọn danh mục gốc-</option>
                                    @{

                                        foreach (var item in lstDanhMucCha3)
                                        {
                                            <option value="@item.ID" @(Model.display_1 == item.ID.ToString() ? "selected" : "")>@item.Name</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" id="labelDanhMucCon3">Danh mục con : </label>

                            <div class="col-md-8">
                                <div id="SelectDanhMucCon3"></div>

                            </div>
                        </div>
                    </td>
                </tr>

            </table>
        </div>


                                }
<style>
    .asterisk {
        color: red;
        font-weight: normal;
    }

    #aTag {
        color: red;
        text-decoration: none;
        padding: 0px;
        margin: 0px;
        position: absolute;
        z-index: 2;
        right: -9px;
        bottom: -12px;
    }

    #previewthumbnail {
        position: relative;
        display: table;
    }
</style>
<script src="~/AppJs/documentcategory.js"></script>
<script>
    
    function GetChild1(idForm) {
        debugger;
        var data = $(".danhmuccha1 option:selected").val();
    
        if (data != null && data != "") {
            AjaxService.POST("/Admin/DocumentCategory/ListChild1Edit", { id: data,idForm:idForm}, function (res) {

                $('#SelectDanhMucCon1').html(res);
            });
            $('#labelDanhMucCon1').show(300);
            $('#SelectDanhMucCon1').show(300);
        }
        else {
            $('#labelDanhMucCon1').hide(300);
            $('#SelectDanhMucCon1').hide(300);
        }
    };
    function GetChild2(idForm) {
        debugger;
        var data = $(".danhmuccha2 option:selected").val();

        if (data != null && data != "") {
            AjaxService.POST("/Admin/DocumentCategory/ListChild2Edit", { id: data,idForm:idForm}, function (res) {

                $('#SelectDanhMucCon2').html(res);
            });
            $('#labelDanhMucCon2').show(300);
            $('#SelectDanhMucCon2').show(300);
        }
        else {
            $('#labelDanhMucCon2').hide(300);
            $('#SelectDanhMucCon2').hide(300);
        }
    };
    function GetChild3(idForm) {
        debugger;
        var data = $(".danhmuccha3 option:selected").val();

        if (data != null && data != "") {
            AjaxService.POST("/Admin/DocumentCategory/ListChild3Edit", { id: data,idForm:idForm}, function (res) {

                $('#SelectDanhMucCon3').html(res);
            });
            $('#labelDanhMucCon3').show(300);
            $('#SelectDanhMucCon3').show(300);
        }
        else {
            $('#labelDanhMucCon3').hide(300);
            $('#SelectDanhMucCon3').hide(300);
        }
    };
    function RemoveImage() {
        debugger;
        swal({
            title: "Bạn có muốn xóa ảnh này không?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Hủy",
        }, function (isConfirm) {
            if (isConfirm) {
                $("#image").remove();
                $("#Photo").val("");
                $("#aTag").remove();
            }
            $("#loading").hide();
        });

    };
    $(".select2").select2({ "width": "100%" });
    $(document).ready(function () {
        
        var idForm = $("#ID").val();
        if (idForm != null) {
            GetChild1(idForm);
            GetChild2(idForm);
            GetChild3(idForm);
        }
        
        
        $("#Browser").click(function () {
            var ckfinder = new CKFinder();
            ckfinder.selectActionFunction = function (fileUrl) {
                $("#previewthumbnail").html('<a id="aTag" href="#" onclick="RemoveImage()" title="Xóa ảnh"><i class="fa fa-close" style="font-size: 25px;"></i></a>' + '<img id="image" src="' + fileUrl + '" width=150 />');
                $("#Photo").val(fileUrl);
            }
            ckfinder.popup();
        });
        $.validator.addMethod("CheckTrung", function (id, value, element) {
            debugger;
            var name = $("#Name").val();
            var id = $("#ID").val();
            var isSuccess = true;//không trùng
            $.ajax({
                async: false,
                url: "/DocumentCategory/CheckTrung",
                type: "get",
                dataType: "json",
                data: {
                    id: id,
                    name: name

                },
                success: function (res) {
                    if (res.trungTen == true) {
                        isSuccess = false;
                    }
                }
            });
            return isSuccess;

        }, "Tên đã tồn tại");
        $("#basicForm").validate({
            rules:
            {
                Name:
                {
                    required: true,
                    CheckTrung: true
                },
                Ordering: {
                    required: true,
                    digits: true
                }
            },
            messages:
            {
                Name:
                {
                    required: "Chưa nhập tên tài liệu",
                    CheckTrung: "Tên đã tồn tại"
                },
                Ordering: {
                    required: "Nhập số thứ tự",
                    digits: "Nhâp kiểu số"
                }

            }
        });
        account.initcheckall();
        $('#pagemanager').slimScroll({
            height: '300px',
        });
        $('.datepicker-mask1').datetimepicker({
            locale: 'vi',
            format: 'DD/MM/YYYY'
        });
        $(".select").select2();
    });

</script>


